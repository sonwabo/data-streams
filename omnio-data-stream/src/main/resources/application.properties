spring.application.name=omnio-data-stream
spring.kafka.streams.application-id=omnio-data-stream

debug=true
logging.level.root=info
#logging.level.org.apache.kafka=trace
#logging.level.org.springframework.cloud.stream=debug
logging.level.uk.co.omniolytics=debug

#Eureka Configuration
eureka.instance.hostname=${vcap.application.uris[0]:localhost}
eureka.instance.secure-port-enabled=true
eureka.instance.secure-port=443
eureka.client.eureka-server-d-n-s-name=${vcap.services.eureka.credentials.host}
eureka.client.serviceUrl.defaultZone=${vcap.services.eureka.credentials.url}


#Kafka Connection configs
spring.kafka.bootstrap-servers=${vcap.services.omnio-streams.credentials.kafka_brokers_sasl[0]},${vcap.services.omnio-streams.credentials.kafka_brokers_sasl[1]},${vcap.services.omnio-streams.credentials.kafka_brokers_sasl[2]}
kafka.topic=iotp_e7uhmd_events

#Producer Configuration
spring.kafka.producer.client-id=${spring.application.name}-producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.ssl.endpoint.identification.algorithm=HTTPS
spring.kafka.producer.properties.security.protocol=SASL_SSL
spring.kafka.producer.properties.sasl.mechanism=PLAIN
spring.kafka.producer.properties.ssl.protocol=TLSv1.2
spring.kafka.producer.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
    username="token" \
    password="${vcap.services.omnio-streams.credentials.api_key}" ;

#Consumer Configuration
spring.kafka.consumer.client-id=${spring.application.name}-consumer
spring.kafka.consumer.group-id=omnio-data-stream-json
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=uk.co.omniolytics.data.streams.binder

spring.kafka.consumer.properties.ssl.endpoint.identification.algorithm=HTTPS
spring.kafka.consumer.properties.security.protocol=SASL_SSL
spring.kafka.consumer.properties.sasl.mechanism=PLAIN
spring.kafka.consumer.properties.ssl.protocol=TLSv1.2
spring.kafka.consumer.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
   username="token" \
   password="${vcap.services.omnio-streams.credentials.api_key}" ;

#Cloudant Configuration
cloudant.uri=${vcap.services.omnio_cloudant.credentials.url}
cloudant.database=device-data
cloudant.username=${vcap.services.omnio_cloudant.credentials.username}
cloudant.password=${vcap.services.omnio_cloudant.credentials.password}

#RabbitMQ user defined properties
rabbitmq.user.queuename=device.data.queue
rabbitmq.user.exchange.name=amq.topic
