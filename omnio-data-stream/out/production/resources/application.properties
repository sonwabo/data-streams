spring.application.name=omnio-data-stream

debug=true
logging.level.root=info
logging.level.org.apache.kafka=trace
logging.level.org.springframework.cloud.stream=debug
logging.level.uk.co.omniolytics=debug

spring.cloud.stream.kafka.binder.configuration.commit.interval.mms=1000
spring.cloud.stream.kafka.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
##Bindings
spring.cloud.stream.bindings.deviceEventOut.destination=iotp_e7uhmd_events
spring.cloud.stream.bindings.deviceEventOut.producer.header-mode=raw

spring.cloud.stream.bindings.deviceEventIn.destination=iotp_e7uhmd_events
spring.cloud.stream.bindings.deviceEventIn.consumer.header-mode=raw

spring.kafka.bootstrap-servers=${vcap.services.omnio-streams.credentials.kafka_brokers_sasl[0]}
spring.kafka.streams.application-id=omnio-data-stream

# User Defined Kafka props
kafka.server.address=${vcap.services.omnio-streams.credentials.kafka_brokers_sasl[0]},${vcap.services.omnio-streams.credentials.kafka_brokers_sasl[1]},${vcap.services.omnio-streams.credentials.kafka_brokers_sasl[2]}
kafka.server.group.id=omnio-data-stream-json
kakfa.topic=iotp_e7uhmd_events

cloudant.uri=${vcap.services.omnio_cloudant.credentials.url}
cloudant.database=device-data
#cloudant.database=omnio_cloudant
cloudant.username=${vcap.services.omnio_cloudant.credentials.username}
cloudant.password=${vcap.services.omnio_cloudant.credentials.password}

server.port=8081
